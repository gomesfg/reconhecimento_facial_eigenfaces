# -*- coding: utf-8 -*-
"""Trabalho Final - Aprendizado Não Supervisionado.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l5WzfK8jTH2sR-Mf7C1jazBrHGIlVx0O
"""

# Aluno: Felipe Eduardo Gomes
# Pós-Graduação Data Science - Turma 2 - FURB

import cv2
import os
import numpy as np

### TREINAMENTO
eigen = cv2.face.EigenFaceRecognizer_create();
array_treino = []
array_teste = []
indice_treino = 7 # Treino 70%

def getImagemComId():
    #caminhos = [os.path.join('drive/MyDrive/Colab Notebooks/Fotos', f) for f in os.listdir('drive/MyDrive/Colab Notebooks/Fotos')]
    caminhos = [os.path.join('Fotos', f) for f in os.listdir('Fotos')]
    faces = []
    ids = []
    for caminhosImagem in caminhos:
        imagemFace = cv2.cvtColor(cv2.imread(caminhosImagem), cv2.COLOR_BGR2GRAY)
        #print(caminhosImagem)
        id = int(os.path.split(caminhosImagem)[-1].split('_')[1].split('.')[0])

        # Montar lista de treino 70% e teste 30%
        arquivo = caminhosImagem[6:][:-3]
        aux = "_"+caminhosImagem[6:][:-3].split('_')[1]
        qtd_vezes_treino = len([s for s in array_treino if aux in s])    
        
        #print(caminhosImagem)
        #print("_"+caminhosImagem[6:][:-3].split('_')[1]) 
        #print(qtd_vezes_treino)

        if qtd_vezes_treino < indice_treino:
            array_treino.append(arquivo)
            ids.append(id)
            faces.append(imagemFace)
        else :
            array_teste.append(arquivo)

    return np.array(ids), faces

ids, faces = getImagemComId()

print("Treinando....")

eigen.train(faces, ids)
eigen.write('classificadorEIGEN_V1.yml')

print("Treinamento concluído ...")

### RECONHECENDO
import cv2

reconhecedor = cv2.face.EigenFaceRecognizer_create()
reconhecedor.read('classificadorEIGEN_V1.yml')

caminhos = [os.path.join('Fotos', f) for f in os.listdir('Fotos')]
for caminhosImagem in caminhos:
    imagemFace = cv2.cvtColor(cv2.imread(caminhosImagem), cv2.COLOR_BGR2GRAY)
    id, confianca = reconhecedor.predict(imagemFace)
    id_teste = int(os.path.split(caminhosImagem)[-1].split('_')[1].split('.')[0])
    
    # Verificar se o resultado bate com o id do arquivo
    if id == id_teste:
        print("Acertou a predição. Id Previsto: "+str(id)+" -> Id da foto: "+str(id_teste))
    elif id != id_teste:
        print("Errou a predição. Id Previsto: "+str(id)+" -> Id da foto: "+str(id_teste))